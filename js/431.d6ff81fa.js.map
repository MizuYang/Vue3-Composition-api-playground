{"version":3,"file":"js/431.d6ff81fa.js","mappings":"49DA4EA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,OACzB,MAAEA,IAAUC,EAAAA,EAAAA,IAAOH,GAGzBI,IAGA,MAAMC,EAAIC,IAEV,SAASF,IACP,MAAMG,GAAIC,EAAAA,EAAAA,IAAS,CACjBC,KAAM,SAERC,QAAQC,IAAI,MAAOJ,GACnB,MAAMK,GAAIC,EAAAA,EAAAA,IAAMN,GAChBG,QAAQC,IAAI,MAAOC,GAEnBF,QAAQC,IAAI,oBAAqB,gDACjCC,EAAEH,KAAO,OACTC,QAAQC,IAAI,MAAOJ,GACnBG,QAAQC,IAAI,MAAOC,GAEnBF,QAAQC,IAAK,iCAAsC,gDACnD,MAAMG,EAAIC,KAAKC,MAAMD,KAAKE,UAAUV,IACpCG,QAAQC,IAAIG,GACZA,EAAEL,KAAO,MACTC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIG,GAEd,SAASR,IACP,MAAMD,GAAIG,EAAAA,EAAAA,IAAS,IAEbU,EAAM,CACVT,KAAM,QASR,OALAJ,EAAEE,EAAIQ,KAAKC,MAAMD,KAAKE,UAAUC,IAGhCb,EAAEO,GAAIO,EAAAA,EAAAA,IAAQD,GAEPb,E,6iBCpHT,MAAMe,EAAc,EAEpB","sources":["webpack://vue-template/./src/views/ToRaw.vue","webpack://vue-template/./src/views/ToRaw.vue?c408"],"sourcesContent":["<template>\r\n  <div class=\"container d-flex flex-column mt-3 px-0 pt-3\" :data-theme=\"theme\">\r\n    <section class=\"my-3 px-3\">\r\n      <h2 class=\"text-20\">ToRaw、MarkRaw</h2>\r\n    </section>\r\n\r\n    <!-- toRaw: 將 reactive 轉為普通資料 -->\r\n    <section class=\"area my-2 p-3\">\r\n      <h3 class=\"text-18 mb-4\">toRaw: 將 reactive 轉為普通資料</h3>\r\n      <!-- 將普通資料轉成響應式 -->\r\n      <div class=\"mb-3\">\r\n        <h4 class=\"mb-2\">將普通資料轉成響應式</h4>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">const a = reactive({ name: 'mizu' })\r\nconsole.log(a) // Proxy(Object) {name: 'mizu'}</pre>\r\n      </div>\r\n\r\n      <!-- 將響應式的資料轉回普通的資料 -->\r\n      <div class=\"mb-3\">\r\n        <h4 class=\"mb-2\">將響應式的資料轉回普通的資料</h4>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">const b = toRaw(a)\r\nconsole.log(b) // {name: 'mizu'}</pre>\r\n      </div>\r\n\r\n      <!-- 傳參考特性 (改變 b.name 後 a.name 也會跟著被修改) -->\r\n      <div class=\"mb-3\">\r\n        <h5 class=\"mb-2\">傳參考特性 (改變 <code>b.name</code> 後 <code>a.name</code> 也會跟著被修改)</h5>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">b.name = 'jack'\r\nconsole.log(a)  // Proxy(Object) {name: 'jack'}\r\nconsole.log(b)  // {name: 'jack'}</pre>\r\n      </div>\r\n\r\n      <!-- 要避免傳參考, 仍須使用 JSON 方法 -->\r\n      <div>\r\n        <h5 class=\"mb-2\">要避免傳參考, 仍須使用 JSON 方法</h5>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">const c = JSON.parse(JSON.stringify(a))\r\nc.name = 'ray'\r\nconsole.log(a)  // Proxy(Object) {name: 'jack'}\r\nconsole.log(c)  // {name: 'ray'}</pre>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- markRaw: 使其丟失響應式 -->\r\n    <section class=\"area my-3 p-3\">\r\n      <h3 class=\"text-18 mb-4\">markRaw: 使其丟失響應式</h3>\r\n      <!-- 將普通資料轉成響應式 -->\r\n      <div>\r\n        <h4 class=\"mb-2\">將 <code>d.b</code> 使用 markRaw 使其失去響應式</h4>\r\n        <p class=\"mb-2\">{{ d }}</p>\r\n        <label for=\"aa\" class=\"mb-2\">\r\n          綁定 d.a.name：\r\n          <input type=\"text\" v-model=\"d.a.name\" id=\"aa\">\r\n        </label>\r\n        <label for=\"bb\" class=\"mb-2\">\r\n          綁定 d.b.name：\r\n          <input type=\"text\" v-model=\"d.b.name\" id=\"bb\">\r\n        </label>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">const d = reactive({})\r\n\r\nconst kid = {\r\n  name: 'rumi'\r\n}\r\n\r\n// d.a 使用 JSON 方法, 避免傳參考特性, 跟著被丟失響應式 (因 d.a、d.b 使用同個 kid 物件)\r\nd.a = JSON.parse(JSON.stringify(kid))\r\n\r\n// 使 d.b 賦予的值移除響應式\r\nd.b = markRaw(kid)</pre>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, toRefs, toRaw, markRaw } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst { theme } = toRefs(themeStore)\r\n\r\n// toRaw: reactive => 普通數據\r\ntoRawDemo()\r\n\r\n// markRaw: 使其丟失響應式\r\nconst d = markRawDemo()\r\n\r\nfunction toRawDemo () {\r\n  const a = reactive({\r\n    name: 'mizu'\r\n  })\r\n  console.log('a: ', a)\r\n  const b = toRaw(a)\r\n  console.log('b: ', b)\r\n\r\n  console.log('%cb.name = \"jack\"', 'background-color: #7bff5a4b;padding:1px 2px;')\r\n  b.name = 'jack'\r\n  console.log('a: ', a)\r\n  console.log('b: ', b)\r\n\r\n  console.log(`%c${'JSON.parse(JSON.stringify())'}`, 'background-color: #7bff5a4b;padding:1px 2px;')\r\n  const c = JSON.parse(JSON.stringify(a))\r\n  console.log(c)\r\n  c.name = 'ray'\r\n  console.log(a)\r\n  console.log(c)\r\n}\r\nfunction markRawDemo () {\r\n  const d = reactive({})\r\n\r\n  const kid = {\r\n    name: 'rumi'\r\n  }\r\n\r\n  // d.a 使用 JSON 方法, 避免傳參考特性, 跟著被丟失響應式 (因 d.a、d.b 使用同個 kid 物件)\r\n  d.a = JSON.parse(JSON.stringify(kid))\r\n\r\n  // 使 d.b 賦予的值移除響應式\r\n  d.b = markRaw(kid)\r\n\r\n  return d\r\n}\r\n\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./ToRaw.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToRaw.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","themeStore","state","theme","toRefs","toRawDemo","d","markRawDemo","a","reactive","name","console","log","b","toRaw","c","JSON","parse","stringify","kid","markRaw","__exports__"],"sourceRoot":""}