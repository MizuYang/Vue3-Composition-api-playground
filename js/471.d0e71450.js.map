{"version":3,"file":"js/471.d0e71450.js","mappings":"kgBAoBA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,MACzBC,GAAQC,EAAAA,EAAAA,M,OACdC,QAAQC,IAAIH,GACZE,QAAQC,IAAI,mCAAoCH,EAAMI,W,+NCrBtD,MAAMC,EAAc,EAEpB,Q,mTCeA,MAAMV,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,MACzBC,GAAQC,EAAAA,EAAAA,M,OACdC,QAAQC,IAAIH,GACZE,QAAQC,IAAI,iDAAkDH,EAAMM,Q,4NCrBpE,MAAM,EAAc,EAEpB,Q,6OCYA,MAAMX,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,M,8OCf/B,MAAM,EAAc,EAEpB,Q,gXCiBA,MAAMJ,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,MACzBC,GAAQO,EAAAA,EAAAA,IAAI,CAAC,MAAO,MAAO,Q,wQCrBjC,MAAM,EAAc,EAEpB,Q,21CCwGA,MAAMZ,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,MACzBA,GAAQS,EAAAA,EAAAA,IAAMX,EAAY,SAC1BY,GAAgBC,EAAAA,EAAAA,KAAS,IACrB,gJAQJC,GAAeD,EAAAA,EAAAA,KAAS,IACpB,kHAMJE,GAAeF,EAAAA,EAAAA,KAAS,IACpB,mIAOJG,GAAeH,EAAAA,EAAAA,KAAS,IACpB,8HAOJI,GAAcP,EAAAA,EAAAA,IAAI,O,02EC7IxB,MAAM,GAAc,GAEpB","sources":["webpack://vue-template/./src/components/slot/預設插槽.vue","webpack://vue-template/./src/components/slot/預設插槽.vue?1414","webpack://vue-template/./src/components/slot/具名插槽.vue","webpack://vue-template/./src/components/slot/具名插槽.vue?bd85","webpack://vue-template/./src/components/slot/作用域插槽.vue","webpack://vue-template/./src/components/slot/作用域插槽.vue?3bd5","webpack://vue-template/./src/components/slot/動態插槽.vue","webpack://vue-template/./src/components/slot/動態插槽.vue?2bd9","webpack://vue-template/./src/views/SlotFather.vue","webpack://vue-template/./src/views/SlotFather.vue?0b01"],"sourcesContent":["<template>\r\n  <div class=\"container d-flex flex-column px-0\">\r\n    <!-- 預設插槽 (默認插槽) -->\r\n    <section class=\"mb-3 p-3\">\r\n      <h3 class=\"mb-1\" :data-theme=\"themeStore.theme\">子層</h3>\r\n\r\n      <pre class=\"bg-dark text-light mt-1 p-2\">{{ `<slot></slot>` }}</pre>\r\n      <p :data-theme=\"themeStore.theme\">\r\n        <code>slot</code>\r\n        渲染父層的資料：\r\n        \"<slot></slot>\"\r\n      </p>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useSlots } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst slots = useSlots()\r\nconsole.log(slots)\r\nconsole.log('slots.default() 獲取默認插槽的虛擬 DOM 對象', slots.default()) // 获取到默认插槽的虚拟dom对象\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./預設插槽.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./預設插槽.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container d-flex flex-column px-0\">\r\n    <!-- 具名插槽 -->\r\n    <section class=\"mb-3 p-3\">\r\n      <h3 class=\"mb-1\" :data-theme=\"themeStore.theme\">子層</h3>\r\n\r\n      <pre class=\"bg-dark text-light mt-1 p-2\">{{ `<slot name=\"text\"></slot>` }}</pre>\r\n      <p :data-theme=\"themeStore.theme\">\r\n        <code>slot</code>\r\n        渲染父層的資料：\r\n        \"<slot name=\"text\"></slot>\"\r\n      </p>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useSlots } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst slots = useSlots()\r\nconsole.log(slots)\r\nconsole.log('slots.text() 獲得父層 v-slot:text 的\"具名插槽\"對象(#text)', slots.text())\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./具名插槽.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./具名插槽.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container d-flex flex-column px-0\">\r\n    <!-- 作用域插槽 -->\r\n    <section class=\"mb-3 p-3\">\r\n      <h3 class=\"mb-1\" :data-theme=\"themeStore.theme\">子層</h3>\r\n\r\n      <pre class=\"bg-dark text-light mt-1 p-2\">{{ `<slot name=\"text2\" :text2=\"'我是子層的資料'\"></slot>` }}</pre>\r\n      <!-- slot prop 給父層的資料 -->\r\n      <slot name=\"text2\" :text2=\"'我是子層的text2'\"></slot>\r\n      <slot name=\"text3\" :text3=\"'我是子層的text3'\"></slot>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./作用域插槽.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./作用域插槽.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container d-flex flex-column px-0\">\r\n    <!-- 作用域插槽 -->\r\n    <section class=\"mb-3 p-3\">\r\n      <h3 class=\"mb-1\" :data-theme=\"themeStore.theme\">子層</h3>\r\n\r\n      <p v-for=\"slot in slots\" :key=\"slot\">\r\n        <slot :name=\"slot\"></slot>\r\n      </p>\r\n\r\n<pre class=\"bg-dark text-light mt-1 p-2\">{{ `<p v-for=\"slot in slots\" :key=\"slot\">\r\n  <slot :name=\"slot\"></slot>\r\n</p>` }}</pre>\r\n<pre class=\"bg-dark text-light mt-1 mb-0 p-2\">const slots = ref(['插槽1', '插槽2', '插槽3'])</pre>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst slots = ref(['插槽1', '插槽2', '插槽3'])\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./動態插槽.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./動態插槽.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container d-flex flex-column my-3 px-0 py-3\">\r\n    <section class=\"my-3 px-3\">\r\n      <h2 class=\"text-20 mb-1\" :data-theme=\"theme\">Slot 插槽</h2>\r\n    </section>\r\n\r\n    <!-- 預設插槽 (默認插槽) -->\r\n    <section class=\"px-3\">\r\n      <h3 class=\"text-18 mb-3\" :data-theme=\"theme\">1. 預設插槽</h3>\r\n      <!-- 父 -->\r\n      <div class=\"ms-3\">\r\n        <h4 class=\"mb-1\" :data-theme=\"theme\">父層</h4>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">{{ `<SlotChild1>\r\n  <span>預設插槽的文字</span>\r\n</SlotChild1>` }}</pre>\r\n      </div>\r\n\r\n      <!-- 子 -->\r\n      <SlotChild1>\r\n        <span :data-theme=\"theme\">預設插槽的文字</span>\r\n      </SlotChild1>\r\n    </section>\r\n\r\n    <!-- 具名插槽 -->\r\n    <section class=\"px-3\">\r\n      <h3 class=\"text-18 mb-3\" :data-theme=\"theme\">2. 具名插槽</h3>\r\n      <!-- 父 -->\r\n      <div class=\"ms-3\">\r\n        <h4 class=\"mb-1\" :data-theme=\"theme\">父層</h4>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">{{ `<SlotChild2>\r\n  <template #text>\r\n    <span>具名插槽</span>\r\n  </template>\r\n</SlotChild2>` }}</pre>\r\n      </div>\r\n\r\n      <!-- 子 -->\r\n      <SlotChild2>\r\n        <template #text>\r\n          <span :data-theme=\"theme\">具名插槽</span>\r\n        </template>\r\n      </SlotChild2>\r\n    </section>\r\n\r\n    <!-- 作用域插槽 -->\r\n    <section class=\"px-3\">\r\n      <h3 class=\"text-18 mb-3\" :data-theme=\"theme\">3. 作用域插槽 <span class=\"text-14\"> ( 把子層的資料取出來給父層用 )</span></h3>\r\n      <!-- 父 -->\r\n      <div class=\"ms-3 mb-3\">\r\n        <h4 class=\"mb-1\" :data-theme=\"theme\">父層</h4>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">{{ 作用域插槽template }}</pre>\r\n      </div>\r\n\r\n      <!-- 子 -->\r\n      <SlotChild3>\r\n        <template #text2=\"slotProps\">\r\n          <p :data-theme=\"theme\">1. 普通寫法：{{ slotProps }}\"</p>\r\n          <pre class=\"bg-dark text-light mt-1 ms-3 mb-4 p-2\">{{ slotExample1 }}</pre>\r\n        </template>\r\n        <!-- 解構 -->\r\n        <template #text3=\"{text3}\">\r\n          <p :data-theme=\"theme\">2. 解構寫法：{{ text3 }}\"</p>\r\n          <pre class=\"bg-dark text-light mt-1 ms-3 mb-4 p-2\">{{ slotExample2 }}</pre>\r\n        </template>\r\n      </SlotChild3>\r\n    </section>\r\n\r\n    <!-- 動態插槽 -->\r\n    <section class=\"px-3\">\r\n      <h3 class=\"text-18 mb-3\" :data-theme=\"theme\">4. 動態插槽</h3>\r\n      <!-- 父 -->\r\n      <div class=\"ms-3\">\r\n        <h4 class=\"mb-1\" :data-theme=\"theme\">父層</h4>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">{{ 動態插槽template }}</pre>\r\n        <pre class=\"bg-dark text-light mt-1 mb-0 p-2\">const dynamicSlot = ref('插槽1')</pre>\r\n\r\n        <label for=\"插槽1\" class=\"me-3\" :data-theme=\"theme\" >\r\n          <input type=\"radio\" name=\"dynamic\" value=\"插槽1\" id=\"插槽1\"  v-model=\"dynamicSlot\">\r\n          插槽1\r\n        </label>\r\n        <label for=\"插槽2\" class=\"me-3\" :data-theme=\"theme\" >\r\n          <input type=\"radio\" name=\"dynamic\" value=\"插槽2\" id=\"插槽2\"  v-model=\"dynamicSlot\">\r\n          插槽2\r\n        </label>\r\n        <label for=\"插槽3\" class=\"me-3\" :data-theme=\"theme\" >\r\n          <input type=\"radio\" name=\"dynamic\" value=\"插槽3\" id=\"插槽3\"  v-model=\"dynamicSlot\">\r\n          插槽3\r\n        </label>\r\n        <p :data-theme=\"theme\">當前插槽：<code>{{ dynamicSlot }}</code></p>\r\n      </div>\r\n\r\n      <!-- 子 -->\r\n      <SlotChild4>\r\n        <template v-slot:[dynamicSlot]>\r\n          <span :data-theme=\"theme\">動態插槽的變數：<code>{{ dynamicSlot }}</code></span>\r\n        </template>\r\n      </SlotChild4>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, toRef, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport SlotChild1 from '@/components/slot/預設插槽.vue'\r\nimport SlotChild2 from '@/components/slot/具名插槽.vue'\r\nimport SlotChild3 from '@/components/slot/作用域插槽.vue'\r\nimport SlotChild4 from '@/components/slot/動態插槽.vue'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst theme = toRef(themeStore, 'theme')\r\nconst 作用域插槽template = computed(() => {\r\n  return `<SlotChild3>\r\n  <template #text2=\"slotProps\">\r\n    <span>\r\n      作用域插槽 - 子層的資料：\"{{ slotProps }}\"\r\n    </span>\r\n  </template>\r\n</SlotChild3>`\r\n})\r\nconst slotExample1 = computed(() => {\r\n  return `<SlotChild3>\r\n  <template #text2=\"slotProps\">\r\n    <p>普通寫法：{{ slotProps }}\"</p>\r\n  </template>\r\n</SlotChild3>`\r\n})\r\nconst slotExample2 = computed(() => {\r\n  return `<SlotChild3>\r\n  <!-- 解構 -->\r\n  <template #text3=\"{ text3 }\">\r\n    <p>解構寫法：{{ text3 }}\"</p>\r\n  </template>\r\n</SlotChild3>`\r\n})\r\nconst 動態插槽template = computed(() => {\r\n  return `<SlotChild4>\r\n  <template v-slot:[dynamicSlot]>\r\n    <span>動態插槽的變數：{{ dynamicSlot }}</span>\r\n  </template>\r\n</SlotChild4>`\r\n})\r\n\r\nconst dynamicSlot = ref('插槽1')\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./SlotFather.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SlotFather.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","themeStore","state","theme","slots","useSlots","console","log","default","__exports__","text","ref","toRef","作用域插槽template","computed","slotExample1","slotExample2","動態插槽template","dynamicSlot"],"sourceRoot":""}