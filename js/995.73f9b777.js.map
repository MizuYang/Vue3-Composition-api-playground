{"version":3,"file":"js/995.73f9b777.js","mappings":"8oBAuBA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,MACzBC,GAAYC,EAAAA,EAAAA,IAAI,W,OACtBC,EAAa,CACXF,UAAAA,I,+bCxBF,MAAMG,EAAc,EAEpB,Q,kjCC+CA,MAAMR,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMC,MACzBA,GAAQK,EAAAA,EAAAA,IAAMP,EAAY,SAC1BQ,GAAQJ,EAAAA,EAAAA,IAAI,MACZK,GAAOL,EAAAA,EAAAA,IAAI,M,OAEjBM,EAAAA,EAAAA,KAAY,MACVC,EAAAA,EAAAA,KAAS,KACPF,EAAKG,MAAQJ,EAAMI,MAAMT,gB,kmBCzD7B,MAAM,EAAc,EAEpB","sources":["webpack://vue-template/./src/components/scriptSetup/DefineExposeChild.vue","webpack://vue-template/./src/components/scriptSetup/DefineExposeChild.vue?34b7","webpack://vue-template/./src/views/DefineExposeFather.vue","webpack://vue-template/./src/views/DefineExposeFather.vue?090f"],"sourcesContent":["<template>\r\n  <div class=\"container pt-3 px-0\">\r\n    <section class=\"p-3 pb-0\">\r\n      <h2 class=\"text-20 mb-1\" :data-theme=\"themeStore.theme\">子層</h2>\r\n\r\n      <input type=\"text\" class=\"form-control\" v-model=\"childData\">\r\n\r\n      <h2 class=\"mt-2\" :data-theme=\"themeStore.theme\"><code v-pre>{{childData}}</code>：{{childData}}</h2>\r\n\r\n      <p class=\"my-2\" :data-theme=\"themeStore.theme\">使用 <code>defineExpose({})</code> 將子層的變數暴露，父層才抓取的到</p>\r\n\r\n      <pre class=\"bg-dark text-light p-2\">const childData = ref('子層的data')\r\ndefineExpose({\r\n  childData\r\n})</pre>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineExpose } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst childData = ref('子層的data')\r\ndefineExpose({\r\n  childData\r\n})\r\n\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./DefineExposeChild.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefineExposeChild.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container pt-3 px-0\">\r\n    <section class=\"p-3 pb-0\">\r\n      <h2 class=\"text-20 mb-1\" :data-theme=\"theme\">父層</h2>\r\n\r\n      <p class=\"my-2\" :data-theme=\"theme\">\r\n        先用 <code>ref()</code>\r\n        抓取子層元素，再抓取子層 <code>defineExpose({})</code> 暴露的變數\r\n      </p>\r\n    </section>\r\n\r\n    <!-- 1. 用變數去接子層的暴露的變數, 並不會響應式更新 -->\r\n    <section class=\"p-3 pb-0\">\r\n      <h3 :data-theme=\"theme\">1. 用變數去接子層的暴露的變數， 並不會響應式更新</h3>\r\n      <p class=\"mb-2\" :data-theme=\"theme\">\r\n        <code v-pre>{{ data }}</code>：{{ data }}\r\n      </p>\r\n    </section>\r\n\r\n    <!-- 2. 透過 ref() 讀取子元件的變數，才會響應式更新 -->\r\n    <section class=\"p-3 pb-0\">\r\n      <h3 :data-theme=\"theme\">2. 透過 <code>ref()</code> 讀取子元件的變數，才會響應式更新</h3>\r\n      <p class=\"mb-2\" :data-theme=\"theme\">\r\n        <code v-pre>{{ child?.childData }}</code>：{{ child?.childData }}\r\n      </p>\r\n    </section>\r\n\r\n    <!-- 程式碼區塊 -->\r\n    <section class=\"p-3 pb-0\">\r\n      <pre class=\"bg-dark text-light p-2\">\r\n{{ '<DefineExposeChild ref=\"child\" />' }}</pre>\r\n      <pre class=\"bg-dark text-light p-2\"><span class=\"text-danger\">// 子元件的 ref 元素</span>\r\nconst child = ref(null)\r\n<span class=\"text-danger\">\r\n// 若父層用變數去接子層暴露的變數\r\n// 此變數無法隨著子層該變數改變而響應式更新</span>\r\nconst data = ref(null)\r\nwatchEffect(() => {\r\n  nextTick(() => {\r\n    data.value = child.value.childData\r\n  })\r\n})</pre>\r\n    </section>\r\n    <DefineExposeChild ref=\"child\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, toRef, watchEffect, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport DefineExposeChild from '@/components/scriptSetup/DefineExposeChild.vue'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst theme = toRef(themeStore, 'theme')\r\nconst child = ref(null)\r\nconst data = ref(null)\r\n\r\nwatchEffect(() => {\r\n  nextTick(() => {\r\n    data.value = child.value.childData\r\n  })\r\n})\r\n\r\n</script>\r\n\r\n<style lang='scss'>\r\n\r\n</style>\r\n","import script from \"./DefineExposeFather.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefineExposeFather.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","themeStore","state","theme","childData","ref","expose","__exports__","toRef","child","data","watchEffect","nextTick","value"],"sourceRoot":""}