{"version":3,"file":"js/228.9bd1bea1.js","mappings":"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","sources":["webpack://vue-template/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://vue-template/./node_modules/@kurkle/color/dist/color.esm.js","webpack://vue-template/../../src/helpers/helpers.core.ts","webpack://vue-template/../../src/helpers/helpers.math.ts","webpack://vue-template/../../src/helpers/helpers.collection.ts","webpack://vue-template/../../src/helpers/helpers.extras.ts","webpack://vue-template/../../src/helpers/helpers.easing.ts","webpack://vue-template/../../src/helpers/helpers.color.ts","webpack://vue-template/../../src/core/core.animations.defaults.js","webpack://vue-template/../../src/core/core.layouts.defaults.js","webpack://vue-template/../../src/helpers/helpers.intl.ts","webpack://vue-template/../../src/core/core.ticks.js","webpack://vue-template/../../src/core/core.scale.defaults.js","webpack://vue-template/../../src/core/core.defaults.js","webpack://vue-template/../../src/helpers/helpers.canvas.ts","webpack://vue-template/../../src/helpers/helpers.options.ts","webpack://vue-template/../../src/helpers/helpers.config.ts","webpack://vue-template/../../src/helpers/helpers.curve.ts","webpack://vue-template/../../src/helpers/helpers.dom.ts","webpack://vue-template/../../src/helpers/helpers.interpolation.ts","webpack://vue-template/../../src/helpers/helpers.rtl.ts","webpack://vue-template/../../src/helpers/helpers.segment.js","webpack://vue-template/./node_modules/chart.js/dist/chart.js","webpack://vue-template/../src/props.ts","webpack://vue-template/../src/utils.ts","webpack://vue-template/../src/chart.ts","webpack://vue-template/../src/typedCharts.ts","webpack://vue-template/./node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","webpack://vue-template/./src/composables/chart/items/useBarConfig.js","webpack://vue-template/./src/components/demo/chart/Bar.vue","webpack://vue-template/./src/components/demo/chart/Bar.vue?ee16","webpack://vue-template/./src/composables/chart/items/useDoughnutConfig.js","webpack://vue-template/./src/components/demo/chart/Doughnut.vue","webpack://vue-template/./src/components/demo/chart/Doughnut.vue?cee3","webpack://vue-template/./src/composables/chart/items/useLineConfig.js","webpack://vue-template/./src/components/demo/chart/Line.vue","webpack://vue-template/./src/components/demo/chart/Line.vue?d207","webpack://vue-template/./src/composables/chart/items/usePieConfig.js","webpack://vue-template/./src/components/demo/chart/Pie.vue","webpack://vue-template/./src/components/demo/chart/Pie.vue?f578","webpack://vue-template/./src/composables/chart/useChart.js","webpack://vue-template/./src/views/demo/Chart.vue","webpack://vue-template/./src/views/demo/Chart.vue?889f"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import type { PropType } from 'vue'\nimport type {\n  ChartType,\n  ChartData,\n  ChartOptions,\n  Plugin,\n  UpdateMode\n} from 'chart.js'\n\nexport const CommonProps = {\n  data: {\n    type: Object as PropType<ChartData>,\n    required: true\n  },\n  options: {\n    type: Object as PropType<ChartOptions>,\n    default: () => ({})\n  },\n  plugins: {\n    type: Array as PropType<Plugin[]>,\n    default: () => []\n  },\n  datasetIdKey: {\n    type: String,\n    default: 'label'\n  },\n  updateMode: {\n    type: String as PropType<UpdateMode>,\n    default: undefined\n  }\n} as const\n\nexport const Props = {\n  type: {\n    type: String as PropType<ChartType>,\n    required: true\n  },\n  ...CommonProps\n} as const\n","import { isProxy, toRaw, version } from 'vue'\nimport type {\n  Chart,\n  ChartType,\n  ChartData,\n  ChartDataset,\n  ChartOptions,\n  DefaultDataPoint\n} from 'chart.js'\n\nexport const compatProps =\n  version[0] === '2'\n    ? <I extends {}, T extends {}>(internals: I, props: T) =>\n        Object.assign(internals, { attrs: props }) as unknown as I & T\n    : <I extends {}, T extends {}>(internals: I, props: T) =>\n        Object.assign(internals, props)\n\nexport function toRawIfProxy<T>(obj: T) {\n  return isProxy(obj) ? toRaw(obj) : obj\n}\n\nexport function cloneProxy<T extends object>(obj: T, src = obj) {\n  return isProxy(src) ? new Proxy(obj, {}) : obj\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions)\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey: string\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = []\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      )\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>\n      }\n\n      addedDatasets.push(currentDataset)\n\n      Object.assign(currentDataset, nextDataset)\n\n      return currentDataset\n    }\n  )\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey: string) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: []\n  }\n\n  setLabels(nextData, data.labels)\n  setDatasets(nextData, data.datasets, datasetIdKey)\n\n  return nextData\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(chart: Chart, event: MouseEvent) {\n  return chart.getElementsAtEventForMode(\n    event,\n    'dataset',\n    { intersect: true },\n    false\n  )\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(chart: Chart, event: MouseEvent) {\n  return chart.getElementsAtEventForMode(\n    event,\n    'nearest',\n    { intersect: true },\n    false\n  )\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(chart: Chart, event: MouseEvent) {\n  return chart.getElementsAtEventForMode(\n    event,\n    'index',\n    { intersect: true },\n    false\n  )\n}\n","import {\n  defineComponent,\n  ref,\n  shallowRef,\n  h,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  toRaw\n} from 'vue'\nimport { Chart as ChartJS } from 'chart.js'\nimport type { ChartComponent } from './types.js'\nimport { Props } from './props.js'\nimport {\n  cloneData,\n  setLabels,\n  setDatasets,\n  setOptions,\n  toRawIfProxy,\n  cloneProxy\n} from './utils.js'\n\nexport const Chart = defineComponent({\n  props: Props,\n  setup(props, { expose }) {\n    const canvasRef = ref<HTMLCanvasElement | null>(null)\n    const chartRef = shallowRef<ChartJS | null>(null)\n\n    expose({ chart: chartRef })\n\n    const renderChart = () => {\n      if (!canvasRef.value) return\n\n      const { type, data, options, plugins, datasetIdKey } = props\n      const clonedData = cloneData(data, datasetIdKey)\n      const proxiedData = cloneProxy(clonedData, data)\n\n      chartRef.value = new ChartJS(canvasRef.value, {\n        type,\n        data: proxiedData,\n        options: { ...options },\n        plugins\n      })\n    }\n\n    const destroyChart = () => {\n      const chart = toRaw(chartRef.value)\n\n      if (chart) {\n        chart.destroy()\n        chartRef.value = null\n      }\n    }\n\n    const update = (chart: ChartJS) => {\n      chart.update(props.updateMode)\n    }\n\n    onMounted(renderChart)\n\n    onBeforeUnmount(destroyChart)\n\n    watch(\n      [() => props.options, () => props.data],\n      (\n        [nextOptionsProxy, nextDataProxy],\n        [prevOptionsProxy, prevDataProxy]\n      ) => {\n        const chart = toRaw(chartRef.value)\n\n        if (!chart) {\n          return\n        }\n\n        let shouldUpdate = false\n\n        if (nextOptionsProxy) {\n          const nextOptions = toRawIfProxy(nextOptionsProxy)\n          const prevOptions = toRawIfProxy(prevOptionsProxy)\n\n          if (nextOptions && nextOptions !== prevOptions) {\n            setOptions(chart, nextOptions)\n            shouldUpdate = true\n          }\n        }\n\n        if (nextDataProxy) {\n          const nextLabels = toRawIfProxy(nextDataProxy.labels)\n          const prevLabels = toRawIfProxy(prevDataProxy.labels)\n          const nextDatasets = toRawIfProxy(nextDataProxy.datasets)\n          const prevDatasets = toRawIfProxy(prevDataProxy.datasets)\n\n          if (nextLabels !== prevLabels) {\n            setLabels(chart.config.data, nextLabels)\n            shouldUpdate = true\n          }\n\n          if (nextDatasets && nextDatasets !== prevDatasets) {\n            setDatasets(chart.config.data, nextDatasets, props.datasetIdKey)\n            shouldUpdate = true\n          }\n        }\n\n        if (shouldUpdate) {\n          update(chart)\n        }\n      },\n      { deep: true }\n    )\n\n    return () => {\n      return h('canvas', {\n        ref: canvasRef\n      })\n    }\n  }\n}) as ChartComponent\n","import { defineComponent, shallowRef, h } from 'vue'\nimport type { ChartType, ChartComponentLike, DefaultDataPoint } from 'chart.js'\nimport {\n  Chart as ChartJS,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController\n} from 'chart.js'\nimport type { TypedChartComponent, ChartComponentRef } from './types.js'\nimport { CommonProps } from './props.js'\nimport { Chart } from './chart.js'\nimport { compatProps } from './utils.js'\n\nexport function createTypedChart<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  type: TType,\n  registerables: ChartComponentLike\n): TypedChartComponent<TType, TData, TLabel> {\n  ChartJS.register(registerables)\n\n  return defineComponent({\n    props: CommonProps,\n    setup(props, { expose }) {\n      const ref = shallowRef<ChartJS | null>(null)\n      const reforwardRef = (chartRef: ChartComponentRef) => {\n        ref.value = chartRef?.chart\n      }\n\n      expose({ chart: ref })\n\n      return () => {\n        return h(\n          Chart,\n          compatProps(\n            {\n              ref: reforwardRef as any\n            },\n            {\n              type,\n              ...props\n            }\n          )\n        )\n      }\n    }\n  }) as any\n}\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController)\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n)\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController)\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController)\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n)\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController)\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n)\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n)\n","/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","import { reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport function useBarConfig () {\r\n  const store = useStore()\r\n  const { dispatch } = store\r\n\r\n  const states = reactive({\r\n    data: {\r\n      labels: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: '第一筆資料',\r\n          backgroundColor: '#7CA3D5',\r\n          // backgroundColor: [  // 為每一個數據使用不同背景色\r\n          //   'rgba(255, 99, 132, 0.2)',\r\n          //   'rgba(54, 162, 235, 0.2)',\r\n          //   'rgba(255, 206, 86, 0.2)',\r\n          //   'rgba(75, 192, 192, 0.2)',\r\n          //   'rgba(153, 102, 255, 0.2)',\r\n          //   'rgba(255, 159, 64, 0.2)'\r\n          // ],\r\n          hoverBackgroundColor: '#5F8AC1',\r\n          data: getRandomData(), // [82, 94, 65, 53, 5, 10, 76, 77, 34, 20, 93, 93, 8]\r\n          // 設定 圖表數據文字樣式\r\n          datalabels: {\r\n            labels: {\r\n              title: {\r\n                color: 'blue',\r\n                font: { size: 20 }\r\n                // 數據文字定位\r\n                // anchor: 'end',\r\n                // align: 'top'\r\n              },\r\n              value: {\r\n                color: '#00B4FF',\r\n                font: { size: 21 }\r\n                // 數據文字定位\r\n                // anchor: 'end',\r\n                // align: 'top'\r\n              }\r\n            },\r\n            // 事件註冊\r\n            listeners: {\r\n              click: function (context, e) {\r\n                if (!context.active) return\r\n                console.log('context', context)\r\n                console.log('e', e)\r\n\r\n                const index = context.dataIndex\r\n                const { label } = context.dataset\r\n                const month = states.data.labels[index]\r\n                const value = context.dataset.data[index]\r\n                const content = `\r\n                您點擊了 ${label} 的 ${index + 1}  月\r\n                ( ${month} )   ${value} \r\n                `\r\n\r\n                dispatch('chart/getChartContent', content)\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          label: '第二筆資料',\r\n          backgroundColor: '#DA9B9B',\r\n          hoverBackgroundColor: '#CF8B8B',\r\n          data: getRandomData(),\r\n          // 設定 圖表數據文字樣式\r\n          datalabels: {\r\n            labels: {\r\n              title: {\r\n                color: 'red',\r\n                font: { size: 20 }\r\n              },\r\n              value: {\r\n                color: 'pink',\r\n                font: { size: 21 }\r\n              }\r\n            },\r\n            listeners: {\r\n              click: function (context, e) {\r\n                if (!context.active) return\r\n                console.log('context', context)\r\n                console.log('e', e)\r\n\r\n                const index = context.dataIndex\r\n                const { label } = context.dataset\r\n                const month = states.data.labels[index]\r\n                const value = context.dataset.data[index]\r\n                const content = `\r\n                您點擊了 ${label} 的 ${index + 1}  月\r\n                ( ${month} )   ${value} \r\n                `\r\n\r\n                dispatch('chart/getChartContent', content)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      // indexAxis: 'y', // 將圖表變成橫的\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        // 設定全部 圖表數據文字樣式\r\n        datalabels: {\r\n          labels: {\r\n            value: {\r\n              color: '#fff'\r\n            },\r\n            title: {\r\n              color: '#fff'\r\n            }\r\n          }\r\n        },\r\n        // 圖表標題樣式\r\n        legend: {\r\n          labels: {\r\n            font: {\r\n              size: 20\r\n            },\r\n            color: 'gray'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  function getRandomData () {\r\n    const data = []\r\n    for (let i = 0; i <= 12; i++) {\r\n      data.push(Math.round(Math.random() * 100) + 1)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return {\r\n    ...toRefs(states)\r\n  }\r\n}\r\n","<template>\r\n  <Bar :data=\"data\" :options=\"options\" style=\"min-height:500px;\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { Bar } from 'vue-chartjs'\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale\r\n} from 'chart.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\r\n\r\nimport { useBarConfig } from '@/composables/chart/items/useBarConfig.js'\r\n\r\nconst { data, options } = useBarConfig()\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n// 顯示項目的數據在圖表上\r\nChartJS.register(ChartDataLabels)\r\n\r\n// 設置文字樣式  (也可在 options.plugins 中做設置)\r\n// ChartJS.defaults.set('plugins.datalabels', {\r\n//   color: '#fff'\r\n// })\r\n// ChartJS.defaults.font.size = 20\r\nChartJS.defaults.color = '#9B9494' // 修改外圍文字顏色\r\n// console.log(ChartJS.defaults)\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n\r\n</style>\r\n","import script from \"./Bar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Bar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport function useDoughnutConfig () {\r\n  const store = useStore()\r\n  const { dispatch } = store\r\n  const states = reactive({\r\n    data: {\r\n      labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],\r\n      datasets: [\r\n        {\r\n          backgroundColor: ['#FA0000', '#2400FD', '#00FA3B', '#F7FA00'],\r\n          data: getRandomData(), // [40, 20, 80, 10]\r\n          datalabels: {\r\n            labels: {\r\n              title: {\r\n                color: 'blue',\r\n                font: { size: 20 }\r\n              },\r\n              value: {\r\n                color: '#00B4FF',\r\n                font: { size: 21 }\r\n              }\r\n            },\r\n            // 事件註冊\r\n            listeners: {\r\n              click: function (context, e) {\r\n                if (!context.active) return\r\n                console.log('context', context)\r\n                console.log('e', e)\r\n\r\n                const index = context.dataIndex\r\n                const name = states.data.labels[index]\r\n                const value = context.dataset.data[index]\r\n\r\n                const content = `您點擊了 ${name}: ${value}`\r\n\r\n                dispatch('chart/getChartContent', content)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            font: {\r\n              size: 14\r\n            },\r\n            color: 'gray'\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  })\r\n\r\n  function getRandomData () {\r\n    const data = []\r\n    for (let i = 0; i < 4; i++) {\r\n      data.push(Math.round(Math.random() * 100) + 1)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return {\r\n    ...toRefs(states)\r\n  }\r\n}\r\n","<template>\r\n  <Doughnut :data=\"data\" :options=\"options\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'\r\nimport { Doughnut } from 'vue-chartjs'\r\nimport { useDoughnutConfig } from '@/composables/chart/items/useDoughnutConfig.js'\r\n// 註冊圖表標示\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\r\n\r\nconst { data, options } = useDoughnutConfig()\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend)\r\n// 顯示項目的數據在圖表上\r\nChartJS.register(ChartDataLabels)\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n\r\n</style>\r\n","import script from \"./Doughnut.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Doughnut.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport function useLine () {\r\n  const store = useStore()\r\n  const { dispatch } = store\r\n  const states = reactive({\r\n    // 圖表數據設定\r\n    data: {\r\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n      datasets: [\r\n        {\r\n          label: '第一筆資料',\r\n          backgroundColor: '#8F9FF3',\r\n          data: getRandomData(), // [40, 39, 10, 40, 30, 80, 40],\r\n          datalabels: {\r\n            labels: {\r\n              title: {\r\n                color: '#fff',\r\n                font: { size: 15 },\r\n                anchor: 'start',\r\n                align: 'top'\r\n              }\r\n            },\r\n            // 事件註冊\r\n            listeners: {\r\n              click: function (context, e) {\r\n                if (!context.active) return\r\n                console.log('context', context)\r\n                console.log('e', e)\r\n\r\n                const index = context.dataIndex\r\n                const { label } = context.dataset\r\n                const month = states.data.labels[index]\r\n                const value = context.dataset.data[index]\r\n                const content = `\r\n                您點擊了 ${label} 的 ${index + 1}  月\r\n                ( ${month} )   ${value} \r\n                `\r\n\r\n                dispatch('chart/getChartContent', content)\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          label: '第二筆資料',\r\n          backgroundColor: '#F59393',\r\n          data: getRandomData(), // [40, 39, 10, 40, 30, 80, 40],\r\n          datalabels: {\r\n            labels: {\r\n              title: {\r\n                color: '#fff',\r\n                font: { size: 15 },\r\n                anchor: 'start',\r\n                align: 'top'\r\n              }\r\n            },\r\n            // 事件註冊\r\n            listeners: {\r\n              click: function (context, e) {\r\n                if (!context.active) return\r\n                console.log('context', context)\r\n                console.log('e', e)\r\n\r\n                const index = context.dataIndex\r\n                const { label } = context.dataset\r\n                const month = states.data.labels[index]\r\n                const value = context.dataset.data[index]\r\n                const content = `\r\n                您點擊了 ${label} 的 ${index + 1}  月\r\n                ( ${month} )   ${value} \r\n                `\r\n\r\n                dispatch('chart/getChartContent', content)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    // 圖表全域設定\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n  })\r\n\r\n  function getRandomData () {\r\n    const data = []\r\n    for (let i = 0; i <= 7; i++) {\r\n      data.push(Math.round(Math.random() * 100) + 1)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  return {\r\n    ...toRefs(states)\r\n  }\r\n}\r\n","<template>\r\n  <Line :data=\"data\" :options=\"options\" />\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js'\r\nimport { Line } from 'vue-chartjs'\r\nimport { useLine } from '@/composables/chart/items/useLineConfig.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n)\r\n// 顯示項目的數據在圖表上\r\nChartJS.register(ChartDataLabels)\r\n\r\nconst { data, options } = useLine()\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n\r\n</style>\r\n","import script from \"./Line.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Line.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { ref, reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport {\r\n  getDatasetAtEvent,\r\n  getElementAtEvent,\r\n  getElementsAtEvent\r\n} from 'vue-chartjs'\r\n\r\nexport function usePieConfig () {\r\n  const store = useStore()\r\n  const { dispatch } = store\r\n  const states = reactive({\r\n    data: {\r\n      labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],\r\n      datasets: [\r\n        {\r\n          backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\r\n          data: getRandomData(), // [40, 20, 80, 10],\r\n          datalabels: {\r\n            labels: {\r\n              title: {\r\n                color: '#fff',\r\n                font: { size: 20 }\r\n              },\r\n              value: {\r\n                color: '#fff',\r\n                font: { size: 21 }\r\n              }\r\n            },\r\n            listeners: {\r\n              click: function (context, e) {\r\n                if (!context.active) return\r\n                console.log('context', context)\r\n                console.log('e', e)\r\n\r\n                const index = context.dataIndex\r\n                const name = states.data.labels[index]\r\n                const value = context.dataset.data[index]\r\n                const content = `您點擊了 ${name} ${value} `\r\n\r\n                dispatch('chart/getChartContent', content)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        // 圖表標題樣式\r\n        legend: {\r\n          labels: {\r\n            font: {\r\n              size: 18\r\n            },\r\n            color: 'gray'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  function getRandomData () {\r\n    const data = []\r\n    for (let i = 0; i < 4; i++) {\r\n      data.push(Math.round(Math.random() * 10) + 1)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  function datasetAtEvent (dataset) {\r\n    if (!dataset.length) return\r\n\r\n    const datasetIndex = dataset[0].datasetIndex\r\n\r\n    console.log('dataset', states.data.datasets[datasetIndex].label)\r\n  }\r\n  function elementAtEvent (element) {\r\n    if (!element.length) return\r\n\r\n    const { datasetIndex, index } = element[0]\r\n\r\n    console.log(\r\n      'element',\r\n      states.data.labels[index],\r\n      states.data.datasets[datasetIndex].data[index]\r\n    )\r\n  }\r\n  function elementsAtEvent (elements) {\r\n    if (!elements.length) return\r\n\r\n    console.log('elements', elements)\r\n  }\r\n\r\n  const pie = ref(null)\r\n  function onClick (e) {\r\n    const {\r\n      value: { chart }\r\n    } = pie\r\n\r\n    if (!chart) {\r\n      return\r\n    }\r\n\r\n    datasetAtEvent(getDatasetAtEvent(chart, e))\r\n    elementAtEvent(getElementAtEvent(chart, e))\r\n    elementsAtEvent(getElementsAtEvent(chart, e))\r\n  }\r\n\r\n  return {\r\n    ...toRefs(states),\r\n    pie,\r\n    onClick\r\n  }\r\n}\r\n","<template>\r\n <Pie :data=\"data\" :options=\"options\" ref=\"pie\" @click=\"onClick\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'\r\nimport { Pie } from 'vue-chartjs'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\r\nimport { usePieConfig } from '@/composables/chart/items/usePieConfig.js'\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend)\r\n// 顯示項目的數據在圖表上\r\nChartJS.register(ChartDataLabels)\r\n\r\nconst { data, options, pie, onClick } = usePieConfig()\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n\r\n</style>\r\n","import script from \"./Pie.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pie.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport Bar from '@/components/demo/chart/Bar.vue'\r\nimport Doughnut from '@/components/demo/chart/Doughnut.vue'\r\nimport Line from '@/components/demo/chart/Line.vue'\r\nimport Pie from '@/components/demo/chart/Pie.vue'\r\n\r\nexport function useChart () {\r\n  const store = useStore()\r\n  const { commit } = store\r\n  const states = reactive({\r\n    currntChartComponent: Bar,\r\n    chartBtn: [\r\n      {\r\n        title: '長條圖(bar)',\r\n        component: Bar,\r\n        name: 'bar'\r\n      },\r\n      {\r\n        title: '甜甜圖(doughnut)',\r\n        component: Doughnut,\r\n        name: 'doughnut'\r\n      },\r\n      {\r\n        title: '折線圖(line)',\r\n        component: Line,\r\n        name: 'line'\r\n      },\r\n      {\r\n        title: '圓餅圖(pie)',\r\n        component: Pie,\r\n        name: 'pie'\r\n      }\r\n    ]\r\n  })\r\n\r\n  const { currntChartComponent } = toRefs(states)\r\n\r\n  function changeChart (data) {\r\n    currntChartComponent.value = data.component\r\n    commit('chart/GET_CURRENT_CHART', data.name)\r\n  }\r\n\r\n  return {\r\n    ...toRefs(states),\r\n    changeChart\r\n  }\r\n}\r\n","<template>\r\n  <div class=\"container px-0 p-3\">\r\n    <header class=\"p-3 pb-0\">\r\n      <h2 class=\"text-20 mb-2\">Chart</h2>\r\n    </header>\r\n\r\n    <!-- 切換圖表按紐 -->\r\n    <section class=\"area m-3 p-3\">\r\n      <button type=\"button\"\r\n              v-for=\"btn in chartBtn\" :key=\"`btn-${btn.name}`\"\r\n              class=\"btn me-1 p-2\"\r\n              :class=\"currentChart===btn.name?'btn-primary':'btn-success'\"\r\n              @click=\"changeChart(btn)\">\r\n              {{ btn.title }}\r\n      </button>\r\n    </section>\r\n\r\n    <!-- 圖表顯示區 -->\r\n    <section class=\"area m-3 p-3\">\r\n      <Component :is=\"currntChartComponent\" />\r\n    </section>\r\n    <!-- 顯示圖表資訊 -->\r\n    <section class=\"area text-center m-3 p-3\">\r\n      <!-- 有圖表資料 (判斷數字的值 .value) -->\r\n      <template v-if=\"activeChartContent\">\r\n        <p class=\"text-20 text-gray\">{{ activeChartContent }}</p>\r\n      </template>\r\n      <!-- 沒圖表資料 -->\r\n      <tempalte v-else>\r\n        <p class=\"text-gray text-20 mb-2\">{ 點擊圖表顯示其內容 ... }</p>\r\n      </tempalte>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useChart } from '@/composables/chart/useChart.js'\r\n\r\nconst { currntChartComponent, chartBtn, changeChart } = useChart()\r\n\r\nconst store = useStore()\r\nconst { activeChartContent, currentChart } = toRefs(store.state.chart)\r\n\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n</style>\r\n","import script from \"./Chart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","isProxy","toRaw","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","defineComponent","setup","param","expose","canvasRef","ref","chartRef","shallowRef","renderChart","clonedData","proxiedData","ChartJS","destroyChart","onMounted","onBeforeUnmount","watch","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","createTypedChart","registerables","reforwardRef","Bar","Doughnut","Line","Pie","screen","deviceXDPI","logicalXDPI","utils","toTextLines","bound","arrayDiff","updates","rasterize","orient","origin","x0","y0","dx","dy","ln","aligned","vx","vy","R_INSIDE","R_LEFT","R_RIGHT","R_BOTTOM","R_TOP","region","clipped","r0","r1","compute$1","anchor","clamp","rx","ry","sx","sy","model","th","tw","tx","ty","frame","getScaleOrigin","getPositioner","drawRoundedRect","drawFrame","bgColor","textGeometry","drawTextLine","shadow","shadowBlur","stroked","filled","drawText","textShadowBlur","shadowColor","textShadowColor","Label","me","_index","_model","_rects","_el","_modelize","defaults$1","positioner","geometry","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","rotated","cx","cy","projected","dp","toAxis","HitBox","_rotation","_rect","coordinates","vs","collide","collider","s0","s1","$layout","_visible","_box","intersects","compute","state","h0","_hidable","pr0","pr1","axes","prepare","_set","sa","sb","dirty","lookup","DEFAULT_KEY","datalabels","configs","_key","dispatchEvent","callback$1","groups","$groups","_dirty","dispatchMoveEvents","enter","leave","handleMoveEvents","expando","_labels","_hovered","handleClickEvents","click","beforeInit","_actives","_listened","_datasets","afterDatasetUpdate","afterDatasetsDraw","beforeEvent","actives","useBarConfig","store","useStore","dispatch","states","reactive","getRandomData","log","content","random","toRefs","ChartDataLabels","__exports__","useDoughnutConfig","useLine","usePieConfig","datasetAtEvent","elementAtEvent","elementsAtEvent","pie","useChart","commit","currntChartComponent","chartBtn","changeChart","activeChartContent","currentChart"],"sourceRoot":""}