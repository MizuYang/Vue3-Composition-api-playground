{"version":3,"file":"js/837.002670a4.js","mappings":"mHAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,I,oNCRTI,EAAAA,EAAAA,GAA2D,KAAxDC,MAAM,OAAQ,aAAYC,EAAAA,WAAWC,OAAO,WAAQ,EAAAC,IACvDJ,EAAAA,EAAAA,GACyE,UADjEK,KAAK,SAASJ,MAAM,kBACpBK,IAAI,eAAgB,aAAYJ,EAAAA,WAAWC,OAAO,SAAM,EAAAI,IADhE,IAOF,OACEC,QACE,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMT,MACzBU,GAAWP,EAAAA,EAAAA,IAAI,UACfQ,GAAeR,EAAAA,EAAAA,IAAI,MACzB,SAASS,IACP,MAAO,eAGT,MAAO,CACLJ,WAAAA,EACAE,SAAAA,EACAC,aAAAA,EACAC,GAAAA,K,QClBN,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,Q,4kDCoEA,MAAMR,GAAQC,EAAAA,EAAAA,MACRC,EAAaF,EAAMG,MAAMT,MACzBA,GAAQe,EAAAA,EAAAA,IAAMP,EAAY,SAC1BQ,GAAcb,EAAAA,EAAAA,IAAI,MAClBc,GAAoBd,EAAAA,EAAAA,IAAI,IACxBe,GAAcf,EAAAA,EAAAA,IAAI,IAClBQ,GAAeR,EAAAA,EAAAA,IAAI,M,OAEzBgB,EAAAA,EAAAA,KAAU,KACRF,EAAkBG,MAAQJ,EAAYI,MAAMV,SAC5CQ,EAAYE,MAAQJ,EAAYI,MAAMR,KACtCD,EAAaS,MAAQJ,EAAYI,MAAMT,gB,gpBCnFzC,MAAM,EAAc,EAEpB","sources":["webpack://vue-template/./node_modules/vue-loader/dist/exportHelper.js","webpack://vue-template/./src/components/MyComponents.vue","webpack://vue-template/./src/components/MyComponents.vue?bb18","webpack://vue-template/./src/views/ComponentTest.vue","webpack://vue-template/./src/views/ComponentTest.vue?8e60"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","<template>\r\n  <p class=\"my-1\" :data-theme=\"themeStore.theme\">\"子元件的文字\"</p>\r\n  <button type=\"button\" class=\"btn btn-primary\"\r\n          ref=\"componentBtn\" :data-theme=\"themeStore.theme\">子元件的按鈕</button>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nexport default {\r\n  setup () {\r\n    const store = useStore()\r\n    const themeStore = store.state.theme\r\n    const variable = ref('子元件的變數')\r\n    const componentBtn = ref(null)\r\n    function fn () {\r\n      return '我是子元件函式回傳的文字'\r\n    }\r\n\r\n    return {\r\n      themeStore,\r\n      variable,\r\n      componentBtn,\r\n      fn\r\n    }\r\n  }\r\n\r\n}\r\n</script><style lang='scss' scope></style>\r\n","import { render } from \"./MyComponents.vue?vue&type=template&id=04186655\"\nimport script from \"./MyComponents.vue?vue&type=script&lang=js\"\nexport * from \"./MyComponents.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\chuchyang\\\\Desktop\\\\vue3\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"container my-3 px-0 py-3\">\r\n    <!-- 匯入元件 -->\r\n    <section class=\"mb-3 p-3\">\r\n      <h2 class=\"text-20 mb-1\" :data-theme=\"theme\">1. 匯入元件</h2>\r\n      <p :data-theme=\"theme\">子元件：</p>\r\n      <MyComponents ref=\"myComponent\" />\r\n    </section>\r\n\r\n    <section class=\"mb-3 p-3\">\r\n      <h2 class=\"text-20 mb-1\" :data-theme=\"theme\">2. 取出子元件中的變數 (<code>ref</code>)</h2>\r\n      <p class=\"my-1\" :data-theme=\"theme\">\r\n        內、外層都必須要 return 並且在 onMounted 才有辦法取得到變數 <br />\r\n        <span class=\"d-inline-block my-2\">子層的變數： \"{{ componentVariable }}\"</span>\r\n        <span class=\"d-inline-block my-2\">子層的函式： \"{{ componentFn }}\"</span>\r\n      </p>\r\n      <div class=\"my-3\">\r\n        <!-- 父層 -->\r\n        <p class=\"mb-2\" :data-theme=\"theme\">父層：</p>\r\n        <pre class=\"bg-dark text-light test-start p-2\">\r\n{{ `<MyComponents ref=\"myComponent\" />` }}</pre>\r\n        <pre class=\"bg-dark text-light p-2\">\r\nconst myComponent = ref(null)\r\nconst componentVariable = ref('')\r\nconst componentFn = ref('')\r\nconst componentBtn = ref(null)\r\n\r\nonMounted(() => {\r\n  componentVariable.value = myComponent.value.variable\r\n  componentFn.value = myComponent.value.fn()\r\n  componentBtn.value = myComponent.value.componentBtn\r\n})\r\n\r\nreturn {\r\n  themeStore,\r\n  myComponent,\r\n  componentVariable,\r\n  componentFn,\r\n  componentBtn\r\n}</pre>\r\n\r\n        <!-- 子層 -->\r\n        <p class=\"mb-2\" :data-theme=\"theme\">子層：</p>\r\n        <pre class=\"bg-dark text-light test-start p-2\">\r\n{{ `<p class=\"my-1\" :data-theme=\"theme\">\"\r\n  子元件的文字\"\r\n</p>\r\n<button type=\"button\" class=\"btn btn-primary\"\r\n        ref=\"componentBtn\"\r\n        :data-theme=\"theme\">\r\n  子元件的按鈕\r\n</button>` }}></pre>\r\n        <pre class=\"bg-dark text-light test-start p-2\">\r\nconst variable = ref('子元件的變數')\r\nconst componentBtn = ref(null)\r\nfunction fn () {\r\n  return '我是子元件函式回傳的文字'\r\n}\r\n\r\nreturn {\r\n  themeStore,\r\n  variable,\r\n  componentBtn,\r\n  fn\r\n}</pre>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, toRef, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport MyComponents from '@/components/MyComponents.vue'\r\n\r\nconst store = useStore()\r\nconst themeStore = store.state.theme\r\nconst theme = toRef(themeStore, 'theme')\r\nconst myComponent = ref(null)\r\nconst componentVariable = ref('')\r\nconst componentFn = ref('')\r\nconst componentBtn = ref(null)\r\n\r\nonMounted(() => {\r\n  componentVariable.value = myComponent.value.variable\r\n  componentFn.value = myComponent.value.fn()\r\n  componentBtn.value = myComponent.value.componentBtn\r\n})\r\n</script>\r\n\r\n<style lang='scss' scope></style>\r\n","import script from \"./ComponentTest.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ComponentTest.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","_createElementVNode","class","$setup","theme","_hoisted_1","type","ref","_hoisted_2","setup","store","useStore","themeStore","state","variable","componentBtn","fn","__exports__","render","toRef","myComponent","componentVariable","componentFn","onMounted","value"],"sourceRoot":""}