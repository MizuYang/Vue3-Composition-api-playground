"use strict";(self["webpackChunkvue_template"]=self["webpackChunkvue_template"]||[]).push([[837],{89:function(t,e){e.Z=(t,e)=>{const n=t.__vccOpts||t;for(const[a,r]of e)n[a]=r;return n}},3837:function(t,e,n){n.r(e),n.d(e,{default:function(){return W}});var a=n(3396),r=n(2268),o=n(4870),m=n(7139);const l=["data-theme"],s=["data-theme"];function c(t,e,n,r,o,m){return(0,a.wg)(),(0,a.iD)(a.HY,null,[(0,a._)("p",{class:"my-1","data-theme":r.themeStore.theme},'"子元件的文字"',8,l),(0,a._)("button",{type:"button",class:"btn btn-primary",ref:"componentBtn","data-theme":r.themeStore.theme},"子元件的按鈕",8,s)],64)}var p={setup(){const t=(0,m.oR)(),e=t.state.theme,n=(0,o.iH)("子元件的變數"),a=(0,o.iH)(null);function r(){return"我是子元件函式回傳的文字"}return{themeStore:e,variable:n,componentBtn:a,fn:r}}},u=n(89);const h=(0,u.Z)(p,[["render",c]]);var i=h;const b={class:"container my-3 px-0 py-3"},d={class:"mb-3 p-3"},v=["data-theme"],f=["data-theme"],_={class:"mb-3 p-3"},y=["data-theme"],k=(0,a.Uk)("2. 取出子元件中的變數 ("),C=(0,a._)("code",null,"ref",-1),S=(0,a.Uk)(")"),g=[k,C,S],B=["data-theme"],U=(0,a.Uk)(" 內、外層都必須要 return 並且在 onMounted 才有辦法取得到變數 "),w=(0,a._)("br",null,null,-1),x={class:"d-inline-block my-2"},H={class:"d-inline-block my-2"},z={class:"my-3"},V=["data-theme"],F=(0,a._)("pre",{class:"bg-dark text-light test-start p-2"},""+(0,r.zw)('<MyComponents ref="myComponent" />'),-1),M=(0,a._)("pre",{class:"bg-dark text-light p-2"},"const myComponent = ref(null)\r\nconst componentVariable = ref('')\r\nconst componentFn = ref('')\r\nconst componentBtn = ref(null)\r\n\r\nonMounted(() => {\r\n  componentVariable.value = myComponent.value.variable\r\n  componentFn.value = myComponent.value.fn()\r\n  componentBtn.value = myComponent.value.componentBtn\r\n})\r\n\r\nreturn {\r\n  themeStore,\r\n  myComponent,\r\n  componentVariable,\r\n  componentFn,\r\n  componentBtn\r\n}",-1),D=["data-theme"],R=(0,a._)("pre",{class:"bg-dark text-light test-start p-2"},(0,r.zw)('<p class="my-1" :data-theme="theme">"\n  子元件的文字"\n</p>\n<button type="button" class="btn btn-primary"\n        ref="componentBtn"\n        :data-theme="theme">\n  子元件的按鈕\n</button>')+">",-1),Z=(0,a._)("pre",{class:"bg-dark text-light test-start p-2"},"const variable = ref('子元件的變數')\r\nconst componentBtn = ref(null)\r\nfunction fn () {\r\n  return '我是子元件函式回傳的文字'\r\n}\r\n\r\nreturn {\r\n  themeStore,\r\n  variable,\r\n  componentBtn,\r\n  fn\r\n}",-1);var O={name:"ComponentTest",setup(t){const e=(0,m.oR)(),n=e.state.theme,l=(0,o.Vh)(n,"theme"),s=(0,o.iH)(null),c=(0,o.iH)(""),p=(0,o.iH)(""),u=(0,o.iH)(null);return(0,a.bv)((()=>{c.value=s.value.variable,p.value=s.value.fn(),u.value=s.value.componentBtn})),(t,e)=>((0,a.wg)(),(0,a.iD)("div",b,[(0,a._)("section",d,[(0,a._)("h2",{class:"text-20 mb-1","data-theme":(0,o.SU)(l)},"1. 匯入元件",8,v),(0,a._)("p",{"data-theme":(0,o.SU)(l)},"子元件：",8,f),(0,a.Wm)(i,{ref_key:"myComponent",ref:s},null,512)]),(0,a._)("section",_,[(0,a._)("h2",{class:"text-20 mb-1","data-theme":(0,o.SU)(l)},g,8,y),(0,a._)("p",{class:"my-1","data-theme":(0,o.SU)(l)},[U,w,(0,a._)("span",x,'子層的變數： "'+(0,r.zw)(c.value)+'"',1),(0,a._)("span",H,'子層的函式： "'+(0,r.zw)(p.value)+'"',1)],8,B),(0,a._)("div",z,[(0,a._)("p",{class:"mb-2","data-theme":(0,o.SU)(l)},"父層：",8,V),F,M,(0,a._)("p",{class:"mb-2","data-theme":(0,o.SU)(l)},"子層：",8,D),R,Z])])]))}};const T=O;var W=T}}]);
//# sourceMappingURL=837.002670a4.js.map